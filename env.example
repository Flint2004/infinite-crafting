# ==================== Docker 配置 ====================

# Dockerfile 选择
# - Dockerfile: 用于 API 模式（轻量级，基于 alpine）
# - Dockerfile.local: 用于本地模型模式（完整版，包含构建工具和GPU支持）
DOCKERFILE=Dockerfile

# 本地模型目录（持久化存储，仅在 AI_MODE=local 时需要）
# 下载的模型文件放在此目录下，Docker会自动挂载到容器内的 /app/models
LOCAL_MODEL_DIR=./server/models

# ==================== AI 模式配置 ====================

# AI 模式：'local' 使用本地模型，'api' 使用外部API
# - local: 需要下载模型文件到 LOCAL_MODEL_DIR，占用内存大，完全离线，可使用GPU加速
# - api: 需要API Key，响应快，无需下载模型
AI_MODE=api

# ==================== API 模式配置 (AI_MODE=api 时) ====================

# 硅基流动 API Key (必须)
# 在 https://cloud.siliconflow.cn/ 注册获取
SILICONFLOW_API_KEY=your_api_key_here

# AI API 地址
SILICONFLOW_API_URL=https://api.siliconflow.cn/v1/chat/completions

# AI 模型名称
# 可选模型：
# - deepseek-ai/DeepSeek-V3.2-Exp (推荐，最新实验版)
# - deepseek-ai/DeepSeek-V3
# - deepseek-ai/DeepSeek-V2.5
# - Qwen/Qwen2.5-72B-Instruct
# - Qwen/Qwen2.5-7B-Instruct
AI_MODEL=deepseek-ai/DeepSeek-V3.2-Exp

# ==================== 本地模型配置 (AI_MODE=local 时) ====================

# 本地模型文件路径（容器内路径，对应 LOCAL_MODEL_DIR 挂载目录）
# 例如：如果 LOCAL_MODEL_DIR=./server/models，模型文件为 mistral-7b.gguf
# 则设置为：/app/models/mistral-7b.gguf
# 推荐模型下载地址：https://huggingface.co/TheBloke/Mistral-7B-Instruct-v0.1-GGUF
LOCAL_MODEL_PATH=/app/models/model.gguf

# HuggingFace 镜像源（中国大陆推荐使用）
HF_ENDPOINT=https://hf-mirror.com

# GPU 支持配置说明：
# 1. 设置 DOCKERFILE=Dockerfile.local
# 2. 设置 AI_MODE=local
# 3. 下载模型文件到 LOCAL_MODEL_DIR 目录
# 4. 启动命令：docker-compose -f docker-compose.yml -f docker-compose.gpu.yml up -d
# 前提条件：已安装 NVIDIA Docker Runtime

# ==================== 通用 AI 配置 ====================

# AI 温度参数 (0.0-2.0)
# 越高越有创造性，越低越确定性
AI_TEMPERATURE=0.7

# AI 最大生成Token数
AI_MAX_TOKENS=200

# ==================== 合成配置 ====================

# 合成顺序是否重要
# - true: 顺序重要, A+B 和 B+A 可能产生不同结果
# - false (或未设置): 顺序不重要, A+B 和 B+A 结果一致 (默认)
CRAFT_ORDER_MATTERS=false

# ==================== 服务器配置 ====================

# 服务器端口
PORT=3000

# 数据库路径（持久化存储，自动挂载到容器）
DB_PATH=/app/data/cache.db

# 预设合成表路径 (可选)
# 指向一个JSON文件，用于在启动时自动加载合成配方
PRESETS_PATH=/app/data/presets.json

# 自定义提示词规则路径 (可选)
# 指向一个TXT文件，用于覆盖默认的AI合成规则
PROMPT_RULES_PATH=/app/data/prompt_rules.txt

# 管理员密钥 (可选)
# 用于执行危险操作，如重置数据库
ADMIN_KEY=your_secret_admin_key

# ==================== 前端配置 ====================

# 前端API基础URL
# Docker部署：http://backend:3000 (容器间通信)
# 本地开发：http://localhost:3000
VITE_API_BASE_URL=http://backend:3000

# 应用标题
VITE_APP_TITLE=OpenCraft

# ==================== Traefik 网络配置 (可选) ====================

# Traefik 网络名称 (如果使用 Traefik)
NETWORK_NAME=reverse-proxy-docker-traefik_routing

# 域名配置 (可选，使用 Traefik 时)
FRONTEND_DOMAIN=opencraft.yourdomain.com
BACKEND_DOMAIN=api.opencraft.yourdomain.com
